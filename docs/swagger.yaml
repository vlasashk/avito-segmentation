basePath: /
definitions:
  internal_controller_api.CsvReportRequest:
    properties:
      month:
        $ref: '#/definitions/time.Month'
      year:
        type: integer
    required:
    - month
    - year
    type: object
  internal_controller_api.CsvReportResponse:
    properties:
      csv_url:
        type: string
      error:
        type: string
      status:
        type: string
    required:
    - csv_url
    type: object
  internal_controller_api.GetSegmentsResponse:
    properties:
      error:
        type: string
      status:
        type: string
      user_id:
        type: integer
      user_segments:
        items:
          type: string
        type: array
    required:
    - user_id
    - user_segments
    type: object
  internal_controller_api.GetUsersResponse:
    properties:
      error:
        type: string
      status:
        type: string
      user_ids:
        items:
          type: integer
        type: array
      user_segment:
        type: string
    required:
    - user_ids
    - user_segment
    type: object
  internal_controller_api.ResponseStatus:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  internal_controller_api.SegmentRequest:
    properties:
      id:
        type: integer
      slug:
        type: string
    required:
    - slug
    type: object
  internal_controller_api.SegmentResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      slug:
        type: string
      status:
        type: string
    required:
    - slug
    type: object
  internal_controller_api.UserRequest:
    properties:
      id:
        type: integer
      user_id:
        type: integer
    required:
    - user_id
    type: object
  internal_controller_api.UserResponse:
    properties:
      error:
        type: string
      id:
        type: integer
      status:
        type: string
      user_id:
        type: integer
    required:
    - user_id
    type: object
  internal_controller_api.UserSegmentRequest:
    properties:
      segment_slug:
        items:
          type: string
        type: array
      user_id:
        type: integer
    required:
    - segment_slug
    - user_id
    type: object
  internal_controller_api.UserSegmentResponse:
    properties:
      error:
        type: string
      segment_slug:
        items:
          type: string
        type: array
      status:
        type: string
      user_id:
        type: integer
    required:
    - segment_slug
    - user_id
    type: object
  time.Month:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    type: integer
    x-enum-varnames:
    - January
    - February
    - March
    - April
    - May
    - June
    - July
    - August
    - September
    - October
    - November
    - December
host: localhost:8090
info:
  contact: {}
  description: API for dynamic user segmentation for testing new functionality
  title: user-segmentation api
  version: "1.0"
paths:
  /report:
    post:
      consumes:
      - application/json
      description: Generate a CSV report for a specific month and year
      operationId: generateCsvReport
      parameters:
      - description: CSV report request
        in: body
        name: csvReport
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.CsvReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully generated CSV report
          schema:
            $ref: '#/definitions/internal_controller_api.CsvReportResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Generate CSV report
  /report/{fileName}:
    get:
      description: Download a previously generated CSV report
      operationId: downloadCsvReport
      parameters:
      - description: CSV file name to download
        in: path
        name: fileName
        required: true
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: CSV file for download
          schema:
            type: file
        "400":
          description: Invalid file name
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Download CSV report
  /segment/addSegment:
    post:
      consumes:
      - application/json
      description: Link user to segments
      operationId: addUserToSegment
      parameters:
      - description: Segment object to be added
        in: body
        name: segment
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.UserSegmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully linked segment to a user
          schema:
            $ref: '#/definitions/internal_controller_api.UserSegmentRequest'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Add user ti a segment
  /segment/new:
    post:
      consumes:
      - application/json
      description: Add a new segment to the system
      operationId: addSegment
      parameters:
      - description: Segment object to be added
        in: body
        name: segment
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.SegmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added segment
          schema:
            $ref: '#/definitions/internal_controller_api.SegmentResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Add a new segment
  /segment/remove:
    delete:
      consumes:
      - application/json
      description: Cascade delete a segment and remove associated users
      operationId: cascadeDeleteSegment
      parameters:
      - description: Segment object to delete
        in: body
        name: segment
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.SegmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted segment
          schema:
            $ref: '#/definitions/internal_controller_api.SegmentResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Cascade delete a segment
  /segment/users/{segmentName}:
    get:
      description: Get a list of users belonging to a specific segment
      operationId: getSegmentUsersInfo
      parameters:
      - description: segment Name to get list of its users
        in: path
        name: segmentName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved segment users
          schema:
            $ref: '#/definitions/internal_controller_api.GetUsersResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Get users of a segment
  /user/new:
    post:
      consumes:
      - application/json
      description: Add a new user to the system
      operationId: addUser
      parameters:
      - description: User object to be added
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added user
          schema:
            $ref: '#/definitions/internal_controller_api.UserResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Add a new user
  /user/segments:
    delete:
      consumes:
      - application/json
      description: Remove a user from one or more segments
      operationId: deleteUserFromSegment
      parameters:
      - description: User and segment association
        in: body
        name: userSegments
        required: true
        schema:
          $ref: '#/definitions/internal_controller_api.UserSegmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully removed user from segment
          schema:
            $ref: '#/definitions/internal_controller_api.UserSegmentResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Remove a user from one or more segments
  /user/segments/{userID}:
    get:
      description: Get information about the segments a user belongs to
      operationId: getUserSegmentsInfo
      parameters:
      - description: user ID to get list of segments for
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user segments
          schema:
            $ref: '#/definitions/internal_controller_api.GetSegmentsResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
        "409":
          description: Query execution failure
          schema:
            $ref: '#/definitions/internal_controller_api.ResponseStatus'
      summary: Get user's segments information
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
